name: 'CI/CD'

on:
  - push
  - workflow_dispatch
  - pull_request

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: 'CI: Restore, Build & Test'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET Core SDKs
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Check if PR is from a fork
        id: check_fork
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "is_pull_request=true" >> $GITHUB_ENV
          else
            echo "is_pull_request=false" >> $GITHUB_ENV
          fi

      - name: Configure AWS Credentials
        if: env.is_pull_request == 'false'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.DEPLOY_ROLE }}
          role-session-name: OIDCSession
      - name: Setup DynamoDB Local
        run: docker run -d -p 8000:8000 amazon/dynamodb-local

      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Lint
        run: dotnet format --verify-no-changes --no-restore
      - name: Test (Main)
        if: env.is_pull_request == 'false'
        run: dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
      - name: Test (PR)
        if: env.is_pull_request == 'true'
        run: dotnet test ./test/AspNetCore.Identity.AmazonDynamoDB.Tests --no-build
      - name: Publish Code Coverage
        uses: codecov/codecov-action@v5
        if: ${{ github.actor != 'dependabot[bot]' && env.is_pull_request == 'false' }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: test/**/TestResults/coverage.info
          fail_ci_if_error: false

  publish:
    name: 'CD: Pack & Publish'
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDKs
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Pack
        run: dotnet pack

      - name: Publish
        run: |
          dotnet nuget push **\*.nupkg \
            --source 'https://api.nuget.org/v3/index.json' \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate